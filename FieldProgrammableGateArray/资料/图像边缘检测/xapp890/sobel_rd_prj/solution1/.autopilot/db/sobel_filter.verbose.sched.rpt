

================================================================
== Report Version
================================================================
* Tool:          Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
* Version:       2012.2
* Build date:    Sun Jul 15 23:22:03 PM 2012
* Copyright (C): 2012 Xilinx Inc. All rights reserved.


================================================================
== General Information
================================================================
* Project:  sobel_rd_prj
* Solution: solution1
* Date:     Thu Sep 06 15:26:32 2012



================================================================
== User Assignments
================================================================
* Product Family:           zynq zynq_fpv6 
* Part:                     xc7z020clg484-1
* Top Model name:           sobel_filter
* Target clock period (ns): 5.00
* Clock uncertainty (ns):   0.62


================================================================
== Performance Estimates
================================================================
+ Summary of timing analysis: 
    * Estimated clock period (ns): 4.27
+ Summary of overall latency (clock cycles): 
    * Best-case latency:    ?
    * Average-case latency: ?
    * Worst-case latency:   ?
+ Summary of loop latency (clock cycles): 
    + Loop 1: 
        * Trip count: ?
        * Latency:    ?
        + Loop 1.1: 
            * Trip count:     ?
            * Latency:        ?
            * Pipeline II:    1
            * Pipeline depth: 12


================================================================
== Area Estimates
================================================================
* Summary: 
(Target device: xc7z020clg484-1)
+---+-----------------+---------+-------+--------+-------+-------+
| ID|             Name| BRAM_18K| DSP48E|      FF|    LUT|  SLICE|
+---+-----------------+---------+-------+--------+-------+-------+
|  0|        Component|        -|      -|       -|      -|      -|
|  1|       Expression|        -|      -|       -|      -|      -|
|  2|             FIFO|        -|      -|       -|      -|      -|
|  3|           Memory|        -|      -|       -|      -|      -|
|  4|      Multiplexer|        -|      -|       -|      -|      -|
|  5|         Register|        -|      -|       -|      -|      -|
+---+-----------------+---------+-------+--------+-------+-------+
|  -|            Total|        0|      0|       0|      0|      0|
+---+-----------------+---------+-------+--------+-------+-------+
|  -|        Available|      280|    220|  106400|  53200|  13300|
+---+-----------------+---------+-------+--------+-------+-------+
|  -|  Utilization (%)|        0|      0|       0|      0|      0|
+---+-----------------+---------+-------+--------+-------+-------+

+ Details: 
    * Component: 
    N/A

    * Expression: 
    N/A

    * FIFO: 
    N/A

    * Memory: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A

* Hierarchical Multiplexer Count: 
+---+--------------+-----+-----+------+
| ID|          Name| Size| Bits| Count|
+---+--------------+-----+-----+------+
|  0|  (This level)|    0|    0|     0|
+---+--------------+-----+-----+------+
|  -|         Total|    0|    0|     0|
+---+--------------+-----+-----+------+



================================================================
== Power Estimate
================================================================
* Summary: 
+---+-------------+
| ID|         Name|
+---+-------------+
|  0|    Component|
|  1|   Expression|
|  2|         FIFO|
|  3|       Memory|
|  4|  Multiplexer|
|  5|     Register|
+---+-------------+
|  -|        Total|
+---+-------------+

* Hierarchical Register Count: 
+---+--------------+------+
| ID|          Name| Count|
+---+--------------+------+
|  0|  (This level)|     0|
+---+--------------+------+
|  -|         Total|     0|
+---+--------------+------+



================================================================
== Interface Summary
================================================================
* Interfaces: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 12


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 15
* Pipeline: 1
  Pipeline-0: II = 1, D = 12, States = { 4 5 6 7 8 9 10 11 12 13 14 15 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / (!exitcond3)
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	3  / (exitcond)
	9  / (!exitcond)
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	4  / true
* FSM state operations: 

 <State 1>: 2.49ns
ST_1: temp [1/1] 0.00ns
entry:0  %temp = alloca i8                               ; <i8*> [#uses=2]

ST_1: tempx_B_V [1/1] 0.00ns
entry:1  %tempx_B_V = alloca i8                          ; <i8*> [#uses=2]

ST_1: tempx_G_V [1/1] 0.00ns
entry:2  %tempx_G_V = alloca i8                          ; <i8*> [#uses=2]

ST_1: tempx_R_V [1/1] 0.00ns
entry:3  %tempx_R_V = alloca i8                          ; <i8*> [#uses=2]

ST_1: buff_C_M_2_2 [1/1] 0.00ns
entry:4  %buff_C_M_2_2 = alloca i8                       ; <i8*> [#uses=3]

ST_1: buff_C_M_0_1 [1/1] 0.00ns
entry:5  %buff_C_M_0_1 = alloca i8                       ; <i8*> [#uses=2]

ST_1: buff_C_M_0_2 [1/1] 0.00ns
entry:6  %buff_C_M_0_2 = alloca i8                       ; <i8*> [#uses=2]

ST_1: buff_C_M_2_1 [1/1] 0.00ns
entry:7  %buff_C_M_2_1 = alloca i8                       ; <i8*> [#uses=2]

ST_1: buff_C_M_1_1 [1/1] 0.00ns
entry:8  %buff_C_M_1_1 = alloca i8                       ; <i8*> [#uses=2]

ST_1: buff_C_M_1_2 [1/1] 0.00ns
entry:9  %buff_C_M_1_2 = alloca i8                       ; <i8*> [#uses=2]

ST_1: cols_read [1/1] 0.00ns
entry:10  %cols_read = call i32 @_ssdm_op_WireRead.i32(i32 %cols) nounwind ; <i32> [#uses=4]

ST_1: rows_read [1/1] 0.00ns
entry:11  %rows_read = call i32 @_ssdm_op_WireRead.i32(i32 %rows) nounwind ; <i32> [#uses=3]

ST_1: buff_A_M_0 [1/1] 0.00ns
entry:12  %buff_A_M_0 = alloca [1920 x i8], align 1       ; <[1920 x i8]*> [#uses=2]

ST_1: buff_A_M_1 [1/1] 0.00ns
entry:13  %buff_A_M_1 = alloca [1920 x i8], align 1       ; <[1920 x i8]*> [#uses=1]

ST_1: buff_A_M_2 [1/1] 0.00ns
entry:14  %buff_A_M_2 = alloca [1920 x i8], align 1       ; <[1920 x i8]*> [#uses=2]

ST_1: tmp2 [1/1] 2.49ns
entry:44  %tmp2 = add i32 %cols_read, 1                   ; <i32> [#uses=2]

ST_1: tmp15_cast [1/1] 0.00ns
entry:45  %tmp15_cast = trunc i32 %tmp2 to i31            ; <i31> [#uses=1]

ST_1: tmp3 [1/1] 2.49ns
entry:46  %tmp3 = add i32 %rows_read, 1                   ; <i32> [#uses=2]

ST_1: tmp16_cast [1/1] 0.00ns
entry:47  %tmp16_cast = trunc i32 %tmp3 to i31            ; <i31> [#uses=1]


 <State 2>: 4.08ns
ST_2: tmp_1 [1/1] 0.00ns
entry:15  %tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str24) nounwind ; <i32> [#uses=1]

ST_2: tmp_2 [1/1] 0.00ns
entry:16  %tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str25) nounwind ; <i32> [#uses=1]

ST_2: stg_37 [1/1] 0.00ns
entry:17  call void (...)* @_ssdm_op_SpecFifo(i32* %inter_pix_data_V, i4* %inter_pix_strb_V, i1* %inter_pix_user_V, i1* %inter_pix_last_V, i1* %inter_pix_tdest_V, [8 x i8]* @p_str26, [1 x i8]* @p_str20)

ST_2: empty [1/1] 0.00ns
entry:18  %empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str25, i32 %tmp_2) nounwind ; <i32> [#uses=0]

ST_2: stg_39 [1/1] 0.00ns
entry:19  call void (...)* @_ssdm_op_SpecIFCore(i32* %inter_pix_data_V, i4* %inter_pix_strb_V, i1* %inter_pix_user_V, i1* %inter_pix_last_V, i1* %inter_pix_tdest_V, [1 x i8]* @p_str20, [5 x i8]* @p_str27, [1 x i8]* @p_str20, [1 x i8]* @p_str20, [1 x i8]* @p_str20, [25 x i8]* @p_str28) nounwind

ST_2: stg_40 [1/1] 0.00ns
entry:20  call void (...)* @_ssdm_op_SpecIFCore(i32* %inter_pix_data_V, i4* %inter_pix_strb_V, i1* %inter_pix_user_V, i1* %inter_pix_last_V, i1* %inter_pix_tdest_V, [1 x i8]* @p_str20, [5 x i8]* @p_str27, [1 x i8]* @p_str20, [1 x i8]* @p_str20, [126 x i8]* @p_str29, [1 x i8]* @p_str20) nounwind

ST_2: empty_20 [1/1] 0.00ns
entry:21  %empty_20 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str24, i32 %tmp_1) nounwind ; <i32> [#uses=0]

ST_2: tmp_3 [1/1] 0.00ns
entry:22  %tmp_3 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str30) nounwind ; <i32> [#uses=1]

ST_2: tmp_4 [1/1] 0.00ns
entry:23  %tmp_4 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str31) nounwind ; <i32> [#uses=1]

ST_2: stg_44 [1/1] 0.00ns
entry:24  call void (...)* @_ssdm_op_SpecFifo(i32* %out_pix_data_V, i4* %out_pix_strb_V, i1* %out_pix_user_V, i1* %out_pix_last_V, i1* %out_pix_tdest_V, [8 x i8]* @p_str26, [1 x i8]* @p_str20)

ST_2: empty_21 [1/1] 0.00ns
entry:25  %empty_21 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str31, i32 %tmp_4) nounwind ; <i32> [#uses=0]

ST_2: stg_46 [1/1] 0.00ns
entry:26  call void (...)* @_ssdm_op_SpecIFCore(i32* %out_pix_data_V, i4* %out_pix_strb_V, i1* %out_pix_user_V, i1* %out_pix_last_V, i1* %out_pix_tdest_V, [1 x i8]* @p_str20, [5 x i8]* @p_str27, [1 x i8]* @p_str20, [1 x i8]* @p_str20, [1 x i8]* @p_str20, [26 x i8]* @p_str32) nounwind

ST_2: stg_47 [1/1] 0.00ns
entry:27  call void (...)* @_ssdm_op_SpecIFCore(i32* %out_pix_data_V, i4* %out_pix_strb_V, i1* %out_pix_user_V, i1* %out_pix_last_V, i1* %out_pix_tdest_V, [1 x i8]* @p_str20, [5 x i8]* @p_str27, [1 x i8]* @p_str20, [1 x i8]* @p_str20, [116 x i8]* @p_str33, [1 x i8]* @p_str20) nounwind

ST_2: empty_22 [1/1] 0.00ns
entry:28  %empty_22 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str30, i32 %tmp_3) nounwind ; <i32> [#uses=0]

ST_2: tmp_5 [1/1] 0.00ns
entry:29  %tmp_5 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str34) nounwind ; <i32> [#uses=1]

ST_2: stg_50 [1/1] 0.00ns
entry:30  call void (...)* @_ssdm_op_SpecWire(i32 %rows, [8 x i8]* @p_str35, [1 x i8]* @p_str20) nounwind

ST_2: empty_23 [1/1] 0.00ns
entry:31  %empty_23 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str34, i32 %tmp_5) nounwind ; <i32> [#uses=0]

ST_2: tmp_8 [1/1] 0.00ns
entry:32  %tmp_8 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str36) nounwind ; <i32> [#uses=1]

ST_2: stg_53 [1/1] 0.00ns
entry:33  call void (...)* @_ssdm_op_SpecWire(i32 %cols, [8 x i8]* @p_str35, [1 x i8]* @p_str20) nounwind

ST_2: empty_24 [1/1] 0.00ns
entry:34  %empty_24 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str36, i32 %tmp_8) nounwind ; <i32> [#uses=0]

ST_2: tmp_9 [1/1] 0.00ns
entry:35  %tmp_9 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str37) nounwind ; <i32> [#uses=1]

ST_2: stg_56 [1/1] 0.00ns
entry:36  call void (...)* @_ssdm_op_SpecIFCore(i32 %rows, [1 x i8]* @p_str20, [10 x i8]* @p_str38, [1 x i8]* @p_str20, [1 x i8]* @p_str20, [1 x i8]* @p_str20, [24 x i8]* @p_str39) nounwind

ST_2: empty_25 [1/1] 0.00ns
entry:37  %empty_25 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str37, i32 %tmp_9) nounwind ; <i32> [#uses=0]

ST_2: tmp_6 [1/1] 0.00ns
entry:38  %tmp_6 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str40) nounwind ; <i32> [#uses=1]

ST_2: stg_59 [1/1] 0.00ns
entry:39  call void (...)* @_ssdm_op_SpecIFCore(i32 %cols, [1 x i8]* @p_str20, [10 x i8]* @p_str38, [1 x i8]* @p_str20, [1 x i8]* @p_str20, [1 x i8]* @p_str20, [24 x i8]* @p_str39) nounwind

ST_2: empty_26 [1/1] 0.00ns
entry:40  %empty_26 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str40, i32 %tmp_6) nounwind ; <i32> [#uses=0]

ST_2: tmp_10 [1/1] 0.00ns
entry:41  %tmp_10 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str41) nounwind ; <i32> [#uses=1]

ST_2: stg_62 [1/1] 0.00ns
entry:42  call void (...)* @_ssdm_op_SpecIFCore(i32 0, [1 x i8]* @p_str20, [10 x i8]* @p_str38, [1 x i8]* @p_str20, [1 x i8]* @p_str20, [66 x i8]* @p_str42, [24 x i8]* @p_str39) nounwind

ST_2: empty_27 [1/1] 0.00ns
entry:43  %empty_27 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str41, i32 %tmp_10) nounwind ; <i32> [#uses=0]

ST_2: tmp1 [1/1] 2.52ns
entry:48  %tmp1 = icmp sgt i32 %tmp2, 0                   ; <i1> [#uses=1]

ST_2: smax2 [1/1] 1.56ns
entry:49  %smax2 = select i1 %tmp1, i31 %tmp15_cast, i31 0 ; <i31> [#uses=1]

ST_2: tmp4 [1/1] 2.52ns
entry:50  %tmp4 = icmp sgt i32 %tmp3, 0                   ; <i1> [#uses=1]

ST_2: smax [1/1] 1.56ns
entry:51  %smax = select i1 %tmp4, i31 %tmp16_cast, i31 0 ; <i31> [#uses=1]

ST_2: tmp_14 [1/1] 2.49ns
entry:52  %tmp_14 = add nsw i32 %rows_read, -1            ; <i32> [#uses=1]

ST_2: tmp_16 [1/1] 2.49ns
entry:53  %tmp_16 = add nsw i32 %cols_read, -1            ; <i32> [#uses=1]

ST_2: stg_70 [1/1] 1.56ns
entry:54  br label %bb23


 <State 3>: 2.52ns
ST_3: row [1/1] 0.00ns
bb23:0  %row = phi i31 [ 0, %entry ], [ %row_1, %bb21 ] ; <i31> [#uses=5]

ST_3: row_cast [1/1] 0.00ns
bb23:1  %row_cast = zext i31 %row to i32                ; <i32> [#uses=2]

ST_3: exitcond3 [1/1] 2.50ns
bb23:2  %exitcond3 = icmp eq i31 %row, %smax            ; <i1> [#uses=1]

ST_3: row_1 [1/1] 2.49ns
bb23:3  %row_1 = add i31 %row, 1                        ; <i31> [#uses=1]

ST_3: stg_75 [1/1] 0.00ns
bb23:4  br i1 %exitcond3, label %bb24, label %bb21.preheader

ST_3: tmp_23 [1/1] 0.00ns
bb21.preheader:0  %tmp_23 = call i30 @_ssdm_op_PartSelect.i30.i31.i32.i32(i31 %row, i32 1, i32 30) ; <i30> [#uses=1]

ST_3: icmp [1/1] 2.49ns
bb21.preheader:1  %icmp = icmp ult i30 %tmp_23, 1                 ; <i1> [#uses=2]

ST_3: tmp_7 [1/1] 2.50ns
bb21.preheader:2  %tmp_7 = icmp ne i31 %row, 0                    ; <i1> [#uses=1]

ST_3: tmp_11 [1/1] 2.52ns
bb21.preheader:3  %tmp_11 = icmp slt i32 %row_cast, %rows_read    ; <i1> [#uses=1]

ST_3: tmp_15 [1/1] 2.52ns
bb21.preheader:4  %tmp_15 = icmp slt i32 %tmp_14, %row_cast       ; <i1> [#uses=2]

ST_3: stg_81 [1/1] 1.56ns
bb21.preheader:5  br label %bb21

ST_3: stg_82 [1/1] 0.00ns
bb24:0  ret void


 <State 4>: 3.53ns
ST_4: col_1 [1/1] 0.00ns
bb21:0  %col_1 = phi i31 [ 0, %bb21.preheader ], [ %col, %bb20 ] ; <i31> [#uses=5]

ST_4: ColIndex_assign_cast [1/1] 0.00ns
bb21:3  %ColIndex_assign_cast = zext i31 %col_1 to i32  ; <i32> [#uses=8]

ST_4: exitcond [1/1] 2.50ns
bb21:4  %exitcond = icmp eq i31 %col_1, %smax2          ; <i1> [#uses=1]

ST_4: col [1/1] 2.49ns
bb21:5  %col = add i31 %col_1, 1                        ; <i31> [#uses=1]

ST_4: stg_87 [1/1] 0.00ns
bb21:6  br i1 %exitcond, label %bb23, label %bb1

ST_4: tmp_13 [1/1] 0.00ns
bb1:0  %tmp_13 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str43) nounwind ; <i32> [#uses=1]

ST_4: stg_89 [1/1] 0.00ns
bb1:1  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, [1 x i8]* @p_str20) nounwind

ST_4: tmp_s [1/1] 2.52ns
bb1:2  %tmp_s = icmp slt i32 %ColIndex_assign_cast, %cols_read ; <i1> [#uses=5]

ST_4: stg_91 [1/1] 0.00ns
bb1:3  br i1 %tmp_s, label %bb.i.0, label %bb3

ST_4: buff_A_M_1_addr [1/1] 0.00ns
bb.i.0:0  %buff_A_M_1_addr = getelementptr [1920 x i8]* %buff_A_M_1, i32 0, i32 %ColIndex_assign_cast ; <i8*> [#uses=2]

ST_4: buff_A_M_1_load [2/2] 2.39ns
bb.i.0:1  %buff_A_M_1_load = load i8* %buff_A_M_1_addr, align 1 ; <i8> [#uses=1]

ST_4: buff_A_M_0_addr [1/1] 0.00ns
bb.i.0:4  %buff_A_M_0_addr = getelementptr [1920 x i8]* %buff_A_M_0, i32 0, i32 %ColIndex_assign_cast ; <i8*> [#uses=1]

ST_4: return_value_5 [2/2] 2.39ns
bb.i.0:5  %return_value_5 = load i8* %buff_A_M_0_addr, align 1 ; <i8> [#uses=2]

ST_4: tmp_12 [1/1] 1.01ns
bb3:0  %tmp_12 = and i1 %tmp_s, %tmp_11                ; <i1> [#uses=1]

ST_4: stg_97 [1/1] 0.00ns
bb3:1  br i1 %tmp_12, label %bb5, label %bb.i463.0_ifconv

ST_4: tmp_27 [1/1] 0.00ns
bb.i463.0_ifconv:34  %tmp_27 = call i30 @_ssdm_op_PartSelect.i30.i31.i32.i32(i31 %col_1, i32 1, i32 30) ; <i30> [#uses=1]

ST_4: icmp7 [1/1] 2.49ns
bb.i463.0_ifconv:35  %icmp7 = icmp ult i30 %tmp_27, 1                ; <i1> [#uses=2]

ST_4: tmp_17 [1/1] 2.52ns
bb.i463.0_ifconv:37  %tmp_17 = icmp slt i32 %tmp_16, %ColIndex_assign_cast ; <i1> [#uses=2]

ST_4: tmp_19 [1/1] 2.50ns
bb.i463.0_ifconv:97  %tmp_19 = icmp ne i31 %col_1, 0                 ; <i1> [#uses=1]

ST_4: or_cond1 [1/1] 1.01ns
bb.i463.0_ifconv:98  %or_cond1 = and i1 %tmp_7, %tmp_19              ; <i1> [#uses=1]

ST_4: stg_103 [1/1] 0.00ns
bb.i463.0_ifconv:99  br i1 %or_cond1, label %bb16, label %bb20

ST_4: output_pixel_last_V [1/1] 2.52ns
bb16:2  %output_pixel_last_V = icmp eq i32 %ColIndex_assign_cast, %cols_read ; <i1> [#uses=1]


 <State 5>: 3.03ns
ST_5: buff_A_M_1_load [1/2] 2.39ns
bb.i.0:1  %buff_A_M_1_load = load i8* %buff_A_M_1_addr, align 1 ; <i8> [#uses=1]

ST_5: return_value_5 [1/2] 2.39ns
bb.i.0:5  %return_value_5 = load i8* %buff_A_M_0_addr, align 1 ; <i8> [#uses=2]

ST_5: input_pixel_data_V [1/1] 1.86ns
bb5:0  %input_pixel_data_V = call i32 @_ssdm_op_FifoRead.volatile.i32P(i32* %inter_pix_data_V) nounwind ; <i32> [#uses=3]

ST_5: input_pixel_strb_V_0 [1/1] 1.70ns
bb5:1  %input_pixel_strb_V_0 = call i4 @_ssdm_op_FifoRead.volatile.i4P(i4* %inter_pix_strb_V) nounwind ; <i4> [#uses=0]

ST_5: input_pixel_user_V_0 [1/1] 1.70ns
bb5:2  %input_pixel_user_V_0 = call i1 @_ssdm_op_FifoRead.volatile.i1P(i1* %inter_pix_user_V) nounwind ; <i1> [#uses=0]

ST_5: input_pixel_last_V_0 [1/1] 1.70ns
bb5:3  %input_pixel_last_V_0 = call i1 @_ssdm_op_FifoRead.volatile.i1P(i1* %inter_pix_last_V) nounwind ; <i1> [#uses=0]

ST_5: input_pixel_tdest_V_0 [1/1] 1.70ns
bb5:4  %input_pixel_tdest_V_0 = call i1 @_ssdm_op_FifoRead.volatile.i1P(i1* %inter_pix_tdest_V) nounwind ; <i1> [#uses=0]

ST_5: new_pix_B_V [1/1] 0.00ns
bb5:5  %new_pix_B_V = trunc i32 %input_pixel_data_V to i8 ; <i8> [#uses=2]

ST_5: new_pix_G_V [1/1] 0.00ns
bb5:6  %new_pix_G_V = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %input_pixel_data_V, i32 8, i32 15) ; <i8> [#uses=3]

ST_5: new_pix_R_V [1/1] 0.00ns
bb5:7  %new_pix_R_V = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %input_pixel_data_V, i32 16, i32 23) ; <i8> [#uses=3]

ST_5: retval_i2_i_cast [1/1] 0.00ns
bb5:18  %retval_i2_i_cast = zext i8 %new_pix_B_V to i13 ; <i13> [#uses=1]

ST_5: tmp_2_i [3/3] 1.17ns
bb5:19  %tmp_2_i = mul i13 %retval_i2_i_cast, 25        ; <i13> [#uses=1]

ST_5: stg_117 [1/1] 0.00ns
bb5:33  store i8 %new_pix_B_V, i8* %tempx_B_V


 <State 6>: 2.39ns
ST_6: buff_A_M_2_addr [1/1] 0.00ns
bb.i.0:2  %buff_A_M_2_addr = getelementptr [1920 x i8]* %buff_A_M_2, i32 0, i32 %ColIndex_assign_cast ; <i8*> [#uses=1]

ST_6: stg_119 [1/1] 2.39ns
bb.i.0:3  store i8 %buff_A_M_1_load, i8* %buff_A_M_2_addr, align 1

ST_6: stg_120 [1/1] 2.39ns
bb.i.0:6  store i8 %return_value_5, i8* %buff_A_M_1_addr, align 1

ST_6: stg_121 [1/1] 0.00ns
bb.i.0:7  store i8 %return_value_5, i8* %temp

ST_6: stg_122 [1/1] 0.00ns
bb.i.0:8  br label %bb3

ST_6: retval_i5_i_cast1 [1/1] 0.00ns
bb5:14  %retval_i5_i_cast1 = zext i8 %new_pix_G_V to i9 ; <i9> [#uses=1]

ST_6: tmp_2_i [2/3] 1.17ns
bb5:19  %tmp_2_i = mul i13 %retval_i2_i_cast, 25        ; <i13> [#uses=1]

ST_6: tmp6 [1/1] 1.77ns
bb5:22  %tmp6 = add i9 %retval_i5_i_cast1, 128          ; <i9> [#uses=1]

ST_6: stg_126 [1/1] 0.00ns
bb5:32  store i8 %new_pix_G_V, i8* %tempx_G_V

ST_6: tempx_B_V_2 [1/1] 0.00ns
bb.i463.0_ifconv:1  %tempx_B_V_2 = load i8* %tempx_B_V              ; <i8> [#uses=1]

ST_6: retval_i2_i1_cast [1/1] 0.00ns
bb.i463.0_ifconv:20  %retval_i2_i1_cast = zext i8 %tempx_B_V_2 to i13 ; <i13> [#uses=1]

ST_6: tmp_2_i1 [3/3] 1.17ns
bb.i463.0_ifconv:21  %tmp_2_i1 = mul i13 %retval_i2_i1_cast, 25      ; <i13> [#uses=1]


 <State 7>: 4.02ns
ST_7: retval_i_i_cast1 [1/1] 0.00ns
bb5:8  %retval_i_i_cast1 = zext i8 %new_pix_R_V to i9  ; <i9> [#uses=1]

ST_7: retval_i_i_cast [1/1] 0.00ns
bb5:9  %retval_i_i_cast = zext i8 %new_pix_R_V to i14  ; <i14> [#uses=1]

ST_7: p_shl_i [1/1] 0.00ns
bb5:10  %p_shl_i = shl i14 %retval_i_i_cast, 6          ; <i14> [#uses=1]

ST_7: p_shl_i_cast [1/1] 0.00ns
bb5:11  %p_shl_i_cast = zext i14 %p_shl_i to i16        ; <i16> [#uses=1]

ST_7: p_shl1_i [1/1] 0.00ns
bb5:12  %p_shl1_i = shl i9 %retval_i_i_cast1, 1         ; <i9> [#uses=1]

ST_7: p_shl1_i_cast [1/1] 0.00ns
bb5:13  %p_shl1_i_cast = zext i9 %p_shl1_i to i16       ; <i16> [#uses=1]

ST_7: retval_i5_i_cast [1/1] 0.00ns
bb5:15  %retval_i5_i_cast = zext i8 %new_pix_G_V to i15 ; <i15> [#uses=1]

ST_7: p_shl2_i [1/1] 0.00ns
bb5:16  %p_shl2_i = shl i15 %retval_i5_i_cast, 7        ; <i15> [#uses=1]

ST_7: p_shl2_i_cast [1/1] 0.00ns
bb5:17  %p_shl2_i_cast = zext i15 %p_shl2_i to i16      ; <i16> [#uses=1]

ST_7: tmp_2_i [1/3] 0.00ns
bb5:19  %tmp_2_i = mul i13 %retval_i2_i_cast, 25        ; <i13> [#uses=1]

ST_7: tmp5 [1/1] 2.01ns
bb5:20  %tmp5 = add i16 %p_shl1_i_cast, %p_shl2_i_cast  ; <i16> [#uses=1]

ST_7: tmp [1/1] 2.01ns
bb5:21  %tmp = add i16 %tmp5, %p_shl_i_cast             ; <i16> [#uses=1]

ST_7: tmp31_cast [1/1] 0.00ns
bb5:23  %tmp31_cast = zext i9 %tmp6 to i13              ; <i13> [#uses=1]

ST_7: tmp7 [1/1] 3.09ns
bb5:24  %tmp7 = add i13 %tmp31_cast, %tmp_2_i           ; <i13> [#uses=1]

ST_7: tmp30_cast [1/1] 0.00ns
bb5:25  %tmp30_cast = zext i13 %tmp7 to i16             ; <i16> [#uses=1]

ST_7: stg_145 [1/1] 0.00ns
bb5:31  store i8 %new_pix_R_V, i8* %tempx_R_V

ST_7: temp_load [1/1] 0.00ns
bb.i463.0_ifconv:0  %temp_load = load i8* %temp                     ; <i8> [#uses=1]

ST_7: tempx_G_V_2 [1/1] 0.00ns
bb.i463.0_ifconv:2  %tempx_G_V_2 = load i8* %tempx_G_V              ; <i8> [#uses=2]

ST_7: buff_A_M_2_addr_1 [1/1] 0.00ns
bb.i463.0_ifconv:8  %buff_A_M_2_addr_1 = getelementptr [1920 x i8]* %buff_A_M_2, i32 0, i32 %ColIndex_assign_cast ; <i8*> [#uses=1]

ST_7: return_value [2/2] 2.39ns
bb.i463.0_ifconv:9  %return_value = load i8* %buff_A_M_2_addr_1, align 1 ; <i8> [#uses=1]

ST_7: retval_i5_i1_cast1 [1/1] 0.00ns
bb.i463.0_ifconv:16  %retval_i5_i1_cast1 = zext i8 %tempx_G_V_2 to i9 ; <i9> [#uses=1]

ST_7: tmp_2_i1 [2/3] 1.17ns
bb.i463.0_ifconv:21  %tmp_2_i1 = mul i13 %retval_i2_i1_cast, 25      ; <i13> [#uses=1]

ST_7: tmp10 [1/1] 1.77ns
bb.i463.0_ifconv:24  %tmp10 = add i9 %retval_i5_i1_cast1, 128        ; <i9> [#uses=1]


 <State 8>: 4.02ns
ST_8: buff_C_M_0_1_2 [1/1] 0.00ns
bb21:1  %buff_C_M_0_1_2 = load i8* %buff_C_M_0_2        ; <i8> [#uses=3]

ST_8: buff_C_M_1_1_1 [1/1] 0.00ns
bb21:2  %buff_C_M_1_1_1 = load i8* %buff_C_M_1_2        ; <i8> [#uses=2]

ST_8: tmp_5_i [1/1] 3.09ns
bb5:26  %tmp_5_i = add i16 %tmp30_cast, %tmp            ; <i16> [#uses=1]

ST_8: tmp_25 [1/1] 0.00ns
bb5:27  %tmp_25 = call i8 @_ssdm_op_PartSelect.i8.i16.i32.i32(i16 %tmp_5_i, i32 8, i32 15) ; <i8> [#uses=1]

ST_8: tempx_R_V_2 [1/1] 0.00ns
bb.i463.0_ifconv:3  %tempx_R_V_2 = load i8* %tempx_R_V              ; <i8> [#uses=2]

ST_8: return_value [1/2] 2.39ns
bb.i463.0_ifconv:9  %return_value = load i8* %buff_A_M_2_addr_1, align 1 ; <i8> [#uses=1]

ST_8: retval_i_i1_cast1 [1/1] 0.00ns
bb.i463.0_ifconv:10  %retval_i_i1_cast1 = zext i8 %tempx_R_V_2 to i9 ; <i9> [#uses=1]

ST_8: retval_i_i1_cast [1/1] 0.00ns
bb.i463.0_ifconv:11  %retval_i_i1_cast = zext i8 %tempx_R_V_2 to i14 ; <i14> [#uses=1]

ST_8: p_shl_i1 [1/1] 0.00ns
bb.i463.0_ifconv:12  %p_shl_i1 = shl i14 %retval_i_i1_cast, 6        ; <i14> [#uses=1]

ST_8: p_shl_i1_cast [1/1] 0.00ns
bb.i463.0_ifconv:13  %p_shl_i1_cast = zext i14 %p_shl_i1 to i16      ; <i16> [#uses=1]

ST_8: p_shl1_i1 [1/1] 0.00ns
bb.i463.0_ifconv:14  %p_shl1_i1 = shl i9 %retval_i_i1_cast1, 1       ; <i9> [#uses=1]

ST_8: p_shl1_i1_cast [1/1] 0.00ns
bb.i463.0_ifconv:15  %p_shl1_i1_cast = zext i9 %p_shl1_i1 to i16     ; <i16> [#uses=1]

ST_8: retval_i5_i1_cast [1/1] 0.00ns
bb.i463.0_ifconv:17  %retval_i5_i1_cast = zext i8 %tempx_G_V_2 to i15 ; <i15> [#uses=1]

ST_8: p_shl2_i1 [1/1] 0.00ns
bb.i463.0_ifconv:18  %p_shl2_i1 = shl i15 %retval_i5_i1_cast, 7      ; <i15> [#uses=1]

ST_8: p_shl2_i1_cast [1/1] 0.00ns
bb.i463.0_ifconv:19  %p_shl2_i1_cast = zext i15 %p_shl2_i1 to i16    ; <i16> [#uses=1]

ST_8: tmp_2_i1 [1/3] 0.00ns
bb.i463.0_ifconv:21  %tmp_2_i1 = mul i13 %retval_i2_i1_cast, 25      ; <i13> [#uses=1]

ST_8: tmp8 [1/1] 2.01ns
bb.i463.0_ifconv:22  %tmp8 = add i16 %p_shl1_i1_cast, %p_shl2_i1_cast ; <i16> [#uses=1]

ST_8: tmp9 [1/1] 2.01ns
bb.i463.0_ifconv:23  %tmp9 = add i16 %tmp8, %p_shl_i1_cast           ; <i16> [#uses=1]

ST_8: tmp35_cast [1/1] 0.00ns
bb.i463.0_ifconv:25  %tmp35_cast = zext i9 %tmp10 to i13             ; <i13> [#uses=1]

ST_8: tmp11 [1/1] 3.09ns
bb.i463.0_ifconv:26  %tmp11 = add i13 %tmp35_cast, %tmp_2_i1         ; <i13> [#uses=1]

ST_8: tmp34_cast [1/1] 0.00ns
bb.i463.0_ifconv:27  %tmp34_cast = zext i13 %tmp11 to i16            ; <i16> [#uses=1]

ST_8: buff_C_M_1_2_3 [1/1] 1.39ns
bb.i463.0_ifconv:31  %buff_C_M_1_2_3 = select i1 %tmp_s, i8 %temp_load, i8 %buff_C_M_1_1_1 ; <i8> [#uses=2]

ST_8: buff_C_M_0_2_4 [1/1] 1.39ns
bb.i463.0_ifconv:32  %buff_C_M_0_2_4 = select i1 %tmp_s, i8 %return_value, i8 %buff_C_M_0_1_2 ; <i8> [#uses=2]

ST_8: stg_176 [1/1] 0.00ns
bb20:2  store i8 %buff_C_M_1_2_3, i8* %buff_C_M_1_2

ST_8: stg_177 [1/1] 0.00ns
bb20:5  store i8 %buff_C_M_0_2_4, i8* %buff_C_M_0_2


 <State 9>: 4.16ns
ST_9: y [1/1] 1.77ns
bb5:28  %y = add i8 %tmp_25, 16                         ; <i8> [#uses=1]

ST_9: buff_A_M_0_addr_1 [1/1] 0.00ns
bb5:29  %buff_A_M_0_addr_1 = getelementptr [1920 x i8]* %buff_A_M_0, i32 0, i32 %ColIndex_assign_cast ; <i8*> [#uses=1]

ST_9: stg_180 [1/1] 2.39ns
bb5:30  store i8 %y, i8* %buff_A_M_0_addr_1, align 1

ST_9: stg_181 [1/1] 0.00ns
bb5:34  br label %bb.i463.0_ifconv

ST_9: buff_C_M_0_1_load [1/1] 0.00ns
bb.i463.0_ifconv:5  %buff_C_M_0_1_load = load i8* %buff_C_M_0_1     ; <i8> [#uses=1]

ST_9: buff_C_M_1_1_load [1/1] 0.00ns
bb.i463.0_ifconv:7  %buff_C_M_1_1_load = load i8* %buff_C_M_1_1     ; <i8> [#uses=1]

ST_9: tmp_5_i1 [1/1] 3.09ns
bb.i463.0_ifconv:28  %tmp_5_i1 = add i16 %tmp34_cast, %tmp9          ; <i16> [#uses=1]

ST_9: tmp_26 [1/1] 0.00ns
bb.i463.0_ifconv:29  %tmp_26 = call i8 @_ssdm_op_PartSelect.i8.i16.i32.i32(i16 %tmp_5_i1, i32 8, i32 15) ; <i8> [#uses=1]

ST_9: y_weight_cast [1/1] 0.00ns
bb.i463.0_ifconv:38  %y_weight_cast = zext i8 %buff_C_M_0_1_load to i9 ; <i9> [#uses=2]

ST_9: tmp_1_0_1_i_cast [1/1] 0.00ns
bb.i463.0_ifconv:39  %tmp_1_0_1_i_cast = zext i8 %buff_C_M_0_1_2 to i9 ; <i9> [#uses=1]

ST_9: tmp_5_0_1_i [1/1] 0.00ns
bb.i463.0_ifconv:40  %tmp_5_0_1_i = shl i9 %tmp_1_0_1_i_cast, 1      ; <i9> [#uses=1]

ST_9: tmp_5_0_1_i_cast [1/1] 0.00ns
bb.i463.0_ifconv:41  %tmp_5_0_1_i_cast = zext i9 %tmp_5_0_1_i to i10 ; <i10> [#uses=1]

ST_9: tmp_1_0_2_i_cast [1/1] 0.00ns
bb.i463.0_ifconv:42  %tmp_1_0_2_i_cast = zext i8 %buff_C_M_0_2_4 to i9 ; <i9> [#uses=2]

ST_9: x_weight [1/1] 1.77ns
bb.i463.0_ifconv:43  %x_weight = sub i9 %tmp_1_0_2_i_cast, %y_weight_cast ; <i9> [#uses=1]

ST_9: x_weight_cast [1/1] 0.00ns
bb.i463.0_ifconv:44  %x_weight_cast = sext i9 %x_weight to i11       ; <i11> [#uses=1]

ST_9: tmp12 [1/1] 1.77ns
bb.i463.0_ifconv:45  %tmp12 = add i9 %y_weight_cast, %tmp_1_0_2_i_cast ; <i9> [#uses=1]

ST_9: tmp36_cast [1/1] 0.00ns
bb.i463.0_ifconv:46  %tmp36_cast = zext i9 %tmp12 to i10             ; <i10> [#uses=1]

ST_9: y_weight [1/1] 1.89ns
bb.i463.0_ifconv:47  %y_weight = add i10 %tmp36_cast, %tmp_5_0_1_i_cast ; <i10> [#uses=1]

ST_9: tmp_1_1_0_i_cast [1/1] 0.00ns
bb.i463.0_ifconv:49  %tmp_1_1_0_i_cast = zext i8 %buff_C_M_1_1_load to i9 ; <i9> [#uses=1]

ST_9: p_shl_i2 [1/1] 0.00ns
bb.i463.0_ifconv:50  %p_shl_i2 = shl i9 %tmp_1_1_0_i_cast, 1         ; <i9> [#uses=1]

ST_9: p_shl_i2_cast [1/1] 0.00ns
bb.i463.0_ifconv:51  %p_shl_i2_cast = zext i9 %p_shl_i2 to i11       ; <i11> [#uses=1]

ST_9: x_weight_1 [1/1] 1.89ns
bb.i463.0_ifconv:52  %x_weight_1 = sub i11 %x_weight_cast, %p_shl_i2_cast ; <i11> [#uses=1]

ST_9: stg_200 [1/1] 0.00ns
bb20:3  store i8 %buff_C_M_1_1_1, i8* %buff_C_M_1_1

ST_9: stg_201 [1/1] 0.00ns
bb20:6  store i8 %buff_C_M_0_1_2, i8* %buff_C_M_0_1


 <State 10>: 3.78ns
ST_10: buff_C_M_2_2_load_1 [1/1] 0.00ns
bb.i463.0_ifconv:4  %buff_C_M_2_2_load_1 = load i8* %buff_C_M_2_2   ; <i8> [#uses=2]

ST_10: buff_C_M_2_1_load [1/1] 0.00ns
bb.i463.0_ifconv:6  %buff_C_M_2_1_load = load i8* %buff_C_M_2_1     ; <i8> [#uses=1]

ST_10: y_2 [1/1] 1.77ns
bb.i463.0_ifconv:30  %y_2 = add i8 %tmp_26, 16                       ; <i8> [#uses=1]

ST_10: buff_C_M_2_2_3 [1/1] 1.39ns
bb.i463.0_ifconv:33  %buff_C_M_2_2_3 = select i1 %tmp_s, i8 %y_2, i8 %buff_C_M_2_2_load_1 ; <i8> [#uses=2]

ST_10: y_weight_2_cast [1/1] 0.00ns
bb.i463.0_ifconv:48  %y_weight_2_cast = zext i10 %y_weight to i11    ; <i11> [#uses=1]

ST_10: tmp_1_1_2_i_cast [1/1] 0.00ns
bb.i463.0_ifconv:53  %tmp_1_1_2_i_cast = zext i8 %buff_C_M_1_2_3 to i9 ; <i9> [#uses=1]

ST_10: tmp_3_1_2_i [1/1] 0.00ns
bb.i463.0_ifconv:54  %tmp_3_1_2_i = shl i9 %tmp_1_1_2_i_cast, 1      ; <i9> [#uses=1]

ST_10: tmp_3_1_2_i_cast [1/1] 0.00ns
bb.i463.0_ifconv:55  %tmp_3_1_2_i_cast = zext i9 %tmp_3_1_2_i to i11 ; <i11> [#uses=1]

ST_10: x_weight_2 [1/1] 1.89ns
bb.i463.0_ifconv:56  %x_weight_2 = add i11 %tmp_3_1_2_i_cast, %x_weight_1 ; <i11> [#uses=1]

ST_10: tmp_1_2_0_i_cast [1/1] 0.00ns
bb.i463.0_ifconv:57  %tmp_1_2_0_i_cast = zext i8 %buff_C_M_2_1_load to i11 ; <i11> [#uses=2]

ST_10: x_weight_3 [1/1] 1.89ns
bb.i463.0_ifconv:58  %x_weight_3 = sub i11 %x_weight_2, %tmp_1_2_0_i_cast ; <i11> [#uses=1]

ST_10: y_weight_1 [1/1] 1.89ns
bb.i463.0_ifconv:59  %y_weight_1 = sub i11 %y_weight_2_cast, %tmp_1_2_0_i_cast ; <i11> [#uses=1]

ST_10: tmp_1_2_1_i_cast [1/1] 0.00ns
bb.i463.0_ifconv:60  %tmp_1_2_1_i_cast = zext i8 %buff_C_M_2_2_load_1 to i9 ; <i9> [#uses=1]

ST_10: p_shl11_i [1/1] 0.00ns
bb.i463.0_ifconv:61  %p_shl11_i = shl i9 %tmp_1_2_1_i_cast, 1        ; <i9> [#uses=1]

ST_10: p_shl11_i_cast [1/1] 0.00ns
bb.i463.0_ifconv:62  %p_shl11_i_cast = zext i9 %p_shl11_i to i11     ; <i11> [#uses=1]

ST_10: y_weight_2 [1/1] 1.89ns
bb.i463.0_ifconv:63  %y_weight_2 = sub i11 %y_weight_1, %p_shl11_i_cast ; <i11> [#uses=1]

ST_10: buff_C_M_2_2_load [1/1] 0.00ns
bb20:0  %buff_C_M_2_2_load = load i8* %buff_C_M_2_2     ; <i8> [#uses=1]

ST_10: empty_28 [1/1] 0.00ns
bb20:1  %empty_28 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str43, i32 %tmp_13) nounwind ; <i32> [#uses=0]

ST_10: stg_220 [1/1] 0.00ns
bb20:4  store i8 %buff_C_M_2_2_load, i8* %buff_C_M_2_1

ST_10: stg_221 [1/1] 0.00ns
bb20:7  store i8 %buff_C_M_2_2_3, i8* %buff_C_M_2_2

ST_10: stg_222 [1/1] 0.00ns
bb20:8  br label %bb21


 <State 11>: 3.66ns
ST_11: tmp_1_2_2_i_cast [1/1] 0.00ns
bb.i463.0_ifconv:64  %tmp_1_2_2_i_cast = zext i8 %buff_C_M_2_2_3 to i11 ; <i11> [#uses=2]

ST_11: x_weight_4 [1/1] 1.89ns
bb.i463.0_ifconv:65  %x_weight_4 = add i11 %x_weight_3, %tmp_1_2_2_i_cast ; <i11> [#uses=2]

ST_11: x_weight_4_cast [1/1] 0.00ns
bb.i463.0_ifconv:66  %x_weight_4_cast = trunc i11 %x_weight_4 to i8  ; <i8> [#uses=2]

ST_11: y_weight_3 [1/1] 1.89ns
bb.i463.0_ifconv:67  %y_weight_3 = sub i11 %y_weight_2, %tmp_1_2_2_i_cast ; <i11> [#uses=2]

ST_11: y_weight_5_cast [1/1] 0.00ns
bb.i463.0_ifconv:68  %y_weight_5_cast = trunc i11 %y_weight_3 to i8  ; <i8> [#uses=2]

ST_11: neg_i_cast [1/1] 1.77ns
bb.i463.0_ifconv:69  %neg_i_cast = sub i8 0, %x_weight_4_cast        ; <i8> [#uses=1]

ST_11: tmp_28 [1/1] 0.00ns
bb.i463.0_ifconv:70  %tmp_28 = call i1 @_ssdm_op_BitSelect.i1.i11.i32(i11 %x_weight_4, i32 10) ; <i1> [#uses=1]

ST_11: neg7_i_cast [1/1] 1.77ns
bb.i463.0_ifconv:72  %neg7_i_cast = sub i8 0, %y_weight_5_cast       ; <i8> [#uses=1]

ST_11: tmp_29 [1/1] 0.00ns
bb.i463.0_ifconv:73  %tmp_29 = call i1 @_ssdm_op_BitSelect.i1.i11.i32(i11 %y_weight_3, i32 10) ; <i1> [#uses=1]


 <State 12>: 3.16ns
ST_12: or_cond [1/1] 1.01ns
bb.i463.0_ifconv:36  %or_cond = or i1 %icmp, %icmp7                  ; <i1> [#uses=2]

ST_12: abs_i [1/1] 1.39ns
bb.i463.0_ifconv:71  %abs_i = select i1 %tmp_28, i8 %neg_i_cast, i8 %x_weight_4_cast ; <i8> [#uses=1]

ST_12: abs9_i [1/1] 1.39ns
bb.i463.0_ifconv:74  %abs9_i = select i1 %tmp_29, i8 %neg7_i_cast, i8 %y_weight_5_cast ; <i8> [#uses=1]

ST_12: tmp_i2 [1/1] 1.77ns
bb.i463.0_ifconv:75  %tmp_i2 = add i8 %abs9_i, %abs_i                ; <i8> [#uses=3]

ST_12: sel_tmp9_demorgan [1/1] 1.01ns
bb.i463.0_ifconv:82  %sel_tmp9_demorgan = or i1 %icmp, %icmp7        ; <i1> [#uses=1]


 <State 13>: 4.04ns
ST_13: tmp_8_i [1/1] 2.00ns
bb.i463.0_ifconv:77  %tmp_8_i = icmp ult i8 %tmp_i2, 55              ; <i1> [#uses=2]

ST_13: tmp_i [1/1] 2.00ns
bb.i463.0_ifconv:78  %tmp_i = icmp ugt i8 %tmp_i2, -101              ; <i1> [#uses=1]

ST_13: sel_tmp6_demorgan [1/1] 1.01ns
bb.i463.0_ifconv:79  %sel_tmp6_demorgan = or i1 %or_cond, %tmp_15    ; <i1> [#uses=2]

ST_13: sel_tmp6 [1/1] 1.01ns
bb.i463.0_ifconv:80  %sel_tmp6 = xor i1 %sel_tmp6_demorgan, true     ; <i1> [#uses=1]

ST_13: sel_tmp7 [1/1] 1.01ns
bb.i463.0_ifconv:81  %sel_tmp7 = and i1 %tmp_17, %sel_tmp6           ; <i1> [#uses=1]

ST_13: sel_tmp9 [1/1] 1.01ns
bb.i463.0_ifconv:83  %sel_tmp9 = xor i1 %sel_tmp9_demorgan, true     ; <i1> [#uses=1]

ST_13: sel_tmp [1/1] 1.01ns
bb.i463.0_ifconv:84  %sel_tmp = and i1 %tmp_15, %sel_tmp9            ; <i1> [#uses=1]

ST_13: tmp_18 [1/1] 1.01ns
bb.i463.0_ifconv:85  %tmp_18 = or i1 %sel_tmp, %sel_tmp7             ; <i1> [#uses=1]

ST_13: sel_tmp17_demorgan [1/1] 1.01ns
bb.i463.0_ifconv:86  %sel_tmp17_demorgan = or i1 %sel_tmp6_demorgan, %tmp_17 ; <i1> [#uses=2]

ST_13: sel_tmp19_demorgan [1/1] 1.01ns
bb.i463.0_ifconv:87  %sel_tmp19_demorgan = or i1 %sel_tmp17_demorgan, %tmp_8_i ; <i1> [#uses=1]

ST_13: sel_tmp5 [1/1] 1.01ns
bb.i463.0_ifconv:92  %sel_tmp5 = xor i1 %sel_tmp17_demorgan, true    ; <i1> [#uses=1]

ST_13: sel_tmp8 [1/1] 1.01ns
bb.i463.0_ifconv:93  %sel_tmp8 = and i1 %tmp_8_i, %sel_tmp5          ; <i1> [#uses=2]


 <State 14>: 4.04ns
ST_14: edge_val [1/1] 1.32ns
bb.i463.0_ifconv:76  %edge_val = xor i8 %tmp_i2, -1                  ; <i8> [#uses=1]

ST_14: sel_tmp2 [1/1] 1.01ns
bb.i463.0_ifconv:88  %sel_tmp2 = xor i1 %sel_tmp19_demorgan, true    ; <i1> [#uses=1]

ST_14: sel_tmp3 [1/1] 1.01ns
bb.i463.0_ifconv:89  %sel_tmp3 = and i1 %tmp_i, %sel_tmp2            ; <i1> [#uses=1]

ST_14: tmp_20 [1/1] 1.01ns
bb.i463.0_ifconv:90  %tmp_20 = or i1 %sel_tmp3, %or_cond             ; <i1> [#uses=1]

ST_14: tmp_21 [1/1] 1.01ns
bb.i463.0_ifconv:91  %tmp_21 = or i1 %tmp_20, %tmp_18                ; <i1> [#uses=1]


 <State 15>: 4.27ns
ST_15: sel_tmp4 [1/1] 0.00ns
bb.i463.0_ifconv:94  %sel_tmp4 = sext i1 %sel_tmp8 to i8             ; <i8> [#uses=1]

ST_15: tmp_30 [1/1] 1.01ns
bb.i463.0_ifconv:95  %tmp_30 = or i1 %sel_tmp8, %tmp_21              ; <i1> [#uses=1]

ST_15: edge_G_V [1/1] 1.39ns
bb.i463.0_ifconv:96  %edge_G_V = select i1 %tmp_30, i8 %sel_tmp4, i8 %edge_val ; <i8> [#uses=3]

ST_15: tmp_22 [1/1] 0.00ns
bb16:0  %tmp_22 = call i24 @_ssdm_op_BitConcatenate.i24.i8.i8.i8(i8 %edge_G_V, i8 %edge_G_V, i8 %edge_G_V) ; <i24> [#uses=1]

ST_15: p_Repl2_s [1/1] 0.00ns
bb16:1  %p_Repl2_s = zext i24 %tmp_22 to i32            ; <i32> [#uses=1]

ST_15: stg_259 [1/1] 1.86ns
bb16:3  call void @_ssdm_op_FifoWrite.volatile.i32P(i32* %out_pix_data_V, i32 %p_Repl2_s) nounwind

ST_15: stg_260 [1/1] 1.70ns
bb16:4  call void @_ssdm_op_FifoWrite.volatile.i4P(i4* %out_pix_strb_V, i4 -1) nounwind

ST_15: stg_261 [1/1] 1.70ns
bb16:5  call void @_ssdm_op_FifoWrite.volatile.i1P(i1* %out_pix_user_V, i1 true) nounwind

ST_15: stg_262 [1/1] 1.70ns
bb16:6  call void @_ssdm_op_FifoWrite.volatile.i1P(i1* %out_pix_last_V, i1 %output_pixel_last_V) nounwind

ST_15: stg_263 [1/1] 1.70ns
bb16:7  call void @_ssdm_op_FifoWrite.volatile.i1P(i1* %out_pix_tdest_V, i1 true) nounwind

ST_15: stg_264 [1/1] 0.00ns
bb16:8  br label %bb20



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
